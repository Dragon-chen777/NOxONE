(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{432:function(t,e,a){"use strict";a.r(e);var s=a(2),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_0-写在最开头"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_0-写在最开头"}},[t._v("#")]),t._v(" 0.写在最开头")]),t._v(" "),e("p",[t._v("本文主要是阅读"),e("a",{attrs:{href:"https://web.dev/howbrowserswork/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《how browsers work》"),e("OutboundLink")],1),t._v("这篇文章时作的学习笔记，同时也加入了自己的理解，从而将篇幅很长很长的原文“精炼”成了这篇文章，但还是推荐大家能耐住性子去看看原文，写的十分的好，虽然花时间比较多，但可以学到很多东西，绝对值得！！！")]),t._v(" "),e("p",[t._v("另外，如有写的不对的地方欢迎大佬评论区批评指正，那么让我们开始吧~")]),t._v(" "),e("h2",{attrs:{id:"_1-浏览器构成"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-浏览器构成"}},[t._v("#")]),t._v(" 1.浏览器构成")]),t._v(" "),e("p",[t._v("浏览器构成的主要组件有：用户界面、浏览器引擎、"),e("code",[t._v("渲染引擎")]),t._v("、网络、UI后端、JS解释器、数据存储\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/945f5f1e376a4bf3bb78a5db35f5c55b~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("h2",{attrs:{id:"_2-rendering-engine"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-rendering-engine"}},[t._v("#")]),t._v(" 2.Rendering engine")]),t._v(" "),e("p",[e("code",[t._v("渲染引擎(rendering engine)")]),t._v("主要将请求到的文件内容渲染成为页面，不同浏览器渲染引擎不同：")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Firefox："),e("code",[t._v("Gecko")])])]),t._v(" "),e("li",[e("p",[t._v("Safari："),e("code",[t._v("WebKit")]),t._v("（开源）")])]),t._v(" "),e("li",[e("p",[t._v("Chrome："),e("code",[t._v("Blink")]),t._v("（WebKit的一个分支）")])]),t._v(" "),e("li",[e("p",[t._v("IE：Trident")])])]),t._v(" "),e("p",[t._v("另外，渲染进程是"),e("code",[t._v("多线程")]),t._v("的，html、css解析、js脚本执行、重排重绘、事件循环都在这个进程中执行")]),t._v(" "),e("h2",{attrs:{id:"_3-render-engine解析流程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-render-engine解析流程"}},[t._v("#")]),t._v(" 3.Render engine解析流程")]),t._v(" "),e("p",[t._v("这里主要介绍"),e("code",[t._v("Webkit引擎")]),t._v("，下面这个渲染流程图建议牢牢记好，全文将会围绕这个展开：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ada77adbaf064216b90b503489a676eb~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("ol",[e("li",[t._v("HTML解析器将html文件解析成"),e("code",[t._v("DOM Tree")]),t._v("，CSS解析器将css文件解析成"),e("code",[t._v("Style Rules")])]),t._v(" "),e("li",[t._v("将DOM Tree和Style Rules进行"),e("code",[t._v("Attachment")]),t._v("（连结）生成"),e("code",[t._v("Render Tree")])]),t._v(" "),e("li",[e("code",[t._v("Render Tree")]),t._v("由多个带有视觉属性（尺寸、样式）的矩形构成，需要逐个计算大小、位置，然后"),e("code",[t._v("Layout")]),t._v("（即布局，重新Layout即"),e("code",[t._v("重排")]),t._v("）")]),t._v(" "),e("li",[t._v("最后"),e("code",[t._v("Painting")]),t._v("，绘制页面完成后展示")])]),t._v(" "),e("p",[e("code",[t._v("Gecko引擎")]),t._v("渲染流程如下:\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9e6c8fa26e364ae985ccc09d1ec7c877~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("p",[t._v("对比WebKit基本流程是一样的，只是一些术语不同：")]),t._v(" "),e("p",[e("code",[t._v("Frame Tree")]),t._v(" == "),e("code",[t._v("Render Tree")])]),t._v(" "),e("p",[e("code",[t._v("Reflow")]),t._v(" == "),e("code",[t._v("Layout")]),t._v("（回流和重排是一个意思）")]),t._v(" "),e("p",[e("code",[t._v("Content Model")]),t._v(" == "),e("code",[t._v("DOM Tree")])]),t._v(" "),e("p",[e("code",[t._v("Frame Constructor")]),t._v(" == "),e("code",[t._v("Attachment")])]),t._v(" "),e("h2",{attrs:{id:"_4-parsing"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-parsing"}},[t._v("#")]),t._v(" 4.Parsing")]),t._v(" "),e("p",[e("code",[t._v("解析")]),t._v("是渲染引擎中一个重要的工作，可以将文档结构转化为代码可以使用的结构。（注意：这里介绍的是引擎通用的解析过程而非只针对于渲染引擎）")]),t._v(" "),e("p",[t._v("通用解析分为两个过程："),e("code",[t._v("词法分析(Lexical)")]),t._v("和"),e("code",[t._v("语法分析(Syntax)")]),t._v("。首先"),e("code",[t._v("词法分析")]),t._v("将文档内容转化为可识别标志，之后通过"),e("code",[t._v("语法分析")]),t._v("构建"),e("code",[t._v("解析树(Parse Tree)")]),t._v("，流程如下:\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a33162ca6b664ebcb2282a5c910c147a~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("p",[t._v("解析的最终结果会得到"),e("code",[t._v("Parse Tree")]),t._v("，然后会通过"),e("code",[t._v("编译")]),t._v("转化成机器能识别的"),e("code",[t._v("机器码")])]),t._v(" "),e("h2",{attrs:{id:"_5-html解析器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-html解析器"}},[t._v("#")]),t._v(" 5.HTML解析器")]),t._v(" "),e("p",[t._v("渲染引擎里的HTML解析器可将HTML文档解析为解析树（对HTML来说得到的解析树就是"),e("code",[t._v("DOM Tree")]),t._v("），其中遵循的"),e("code",[t._v("词法分析")]),t._v("和"),e("code",[t._v("语法分析")]),t._v("规范由W3C制定。")]),t._v(" "),e("p",[t._v("HTML结构如下:")]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("body")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("Hello World"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("p")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("example.png"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("body")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("html")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n")])])]),e("p",[t._v("解析成DOM Tree结构如下:\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3d557a7805a04f17afc6bab1bcef85c3~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("h3",{attrs:{id:"_5-1-解析算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-解析算法"}},[t._v("#")]),t._v(" 5.1 解析算法")]),t._v(" "),e("p",[t._v("HTML解析算法包括两个阶段："),e("code",[t._v("标记化(tokenization)")]),t._v("和"),e("code",[t._v("树构建(tree construction)")])]),t._v(" "),e("ol",[e("li",[e("p",[t._v("标记化对应解析过程中的"),e("code",[t._v("词法分析")]),t._v("，"),e("code",[t._v("标记器(tokenizer)")]),t._v("根据"),e("code",[t._v("词法规范")]),t._v("会将HTML代码解析为一个个"),e("code",[t._v("标记(tokens)")]),t._v("，包括"),e("code",[t._v("开始标记")]),t._v("、"),e("code",[t._v("结束标记")]),t._v("、"),e("code",[t._v("属性名称")]),t._v("、"),e("code",[t._v("属性值")]),t._v("。之后标记器每解析出一个标记就会交给"),e("code",[t._v("树构建器")]),t._v("，然后又开始准备下一轮解析")])]),t._v(" "),e("li",[e("p",[t._v("树构建对应解析过程中的"),e("code",[t._v("语法分析")]),t._v("，接收来自标记器的一个个标记，将其解析为一个个"),e("code",[t._v("DOM")]),t._v("，根据"),e("code",[t._v("语法规范")]),t._v("动态插入，最终构建生成"),e("code",[t._v("DOM Tree")]),t._v(" "),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f1d3810f916048268a797d70c3cbcef3~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})])])]),t._v(" "),e("h2",{attrs:{id:"_6-css解析器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-css解析器"}},[t._v("#")]),t._v(" 6.CSS解析器")]),t._v(" "),e("p",[t._v("CSS解析器与HTML解析过程类似，通过"),e("code",[t._v("词法分析")]),t._v("识别"),e("code",[t._v("css选择器标识符")]),t._v("、"),e("code",[t._v("样式属性标识符")]),t._v("以及"),e("code",[t._v("样式属性值")]),t._v("等，再通过"),e("code",[t._v("语法分析")]),t._v("阶段解析得到"),e("code",[t._v("Style Rules")]),t._v("即解析的最终结果"),e("code",[t._v("Parse Tree")])]),t._v(" "),e("p",[t._v("拿Webkit引擎里的CSS解析器作说明：它会将每个css文件解析为一个"),e("code",[t._v("StyleSheet(样式表)")]),t._v("对象，内部由一个个"),e("code",[t._v("CSSRule(css规则)")]),t._v("对象构成，而"),e("code",[t._v("CSSRule")]),t._v("内部由两个对象"),e("code",[t._v("Selections(选择器)")]),t._v("和"),e("code",[t._v("Declaration(声明)")]),t._v("构成")]),t._v(" "),e("p",[t._v("例如这一段css代码")]),t._v(" "),e("div",{staticClass:"language-css extra-class"},[e("pre",{pre:!0,attrs:{class:"language-css"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("p,div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("margin-top")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("3px"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".error")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v("color")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("red"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("最终解析得到的"),e("code",[t._v("Style Rules")]),t._v("树为:\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5e9f48f3f954276b924cea859466f27~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("h2",{attrs:{id:"_7-render-tree的构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-render-tree的构建"}},[t._v("#")]),t._v(" 7.Render Tree的构建")]),t._v(" "),e("h3",{attrs:{id:"_7-1-render-tree构建过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-render-tree构建过程"}},[t._v("#")]),t._v(" 7.1 Render Tree构建过程")]),t._v(" "),e("p",[t._v("经过HTML解析和CSS解析生成了"),e("code",[t._v("DOM Tree")]),t._v("和"),e("code",[t._v("Style RUles")]),t._v("树之后，将两者"),e("code",[t._v("Attach")]),t._v("最终会构建生成"),e("code",[t._v("Render Tree")]),t._v("，如下图所示\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e4c9fe8ff464258bf0c5f224a881e4a~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("p",[e("code",[t._v("Render Tree")]),t._v("里的每个节点为"),e("code",[t._v("RenderObject")]),t._v("，其外在表现为一个矩形框，几何信息包含宽高、位置、样式、z-index等。")]),t._v(" "),e("p",[e("code",[t._v("RenderObject")]),t._v("分为很多种类型，由"),e("code",[t._v("display")]),t._v("属性决定，从创建"),e("code",[t._v("RenderObject")]),t._v("的webkit代码可以看出")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("RenderObject"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" RenderObject"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("createObject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("Node"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RenderStyle"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" style")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Document"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" doc "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("document")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  RenderArena"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" arena "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" doc"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("renderArena")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  RenderObject"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" o "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("style"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("display")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 判断其display类型")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NONE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// display:none，不会创建renderObject，意味着将该节点不会插入到文档中")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n     * 题外话：回答display:none和visibility:hidden的区别时可以扯一下这个\n     * 在display为none时，元素在构建渲染树这一环节已经被gank掉了（不会生成renderObject），\n     * 不会参与后续的layout和paint环节\n     * 而visibility:hidden，只是将元素设置为视觉不可见，\n     * 还是会生成renderObject并参与后续的layout和paint环节）\n     */")]),t._v("\n          \n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INLINE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// inline")]),t._v("\n      o "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arena"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("RenderInline")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BLOCK")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// block")]),t._v("\n      o "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arena"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("RenderBlock")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("INLINE_BLOCK")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// inline-block")]),t._v("\n      o "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arena"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("RenderBlock")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("LIST_ITEM")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list-item")]),t._v("\n      o "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arena"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("RenderListItem")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"_7-2-render-tree和dom-tree的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-render-tree和dom-tree的区别"}},[t._v("#")]),t._v(" 7.2 Render Tree和DOM Tree的区别")]),t._v(" "),e("p",[t._v("Render Tree与DOM Tree在结构上并不是一 一对应的:")]),t._v(" "),e("p",[t._v("1.以下HTML元素不会被插入到Render Tree中")]),t._v(" "),e("ul",[e("li",[t._v("header")]),t._v(" "),e("li",[t._v("meta")]),t._v(" "),e("li",[t._v("title")]),t._v(" "),e("li",[t._v("display:none")]),t._v(" "),e("li",[t._v("... ...")])]),t._v(" "),e("p",[t._v("2.一个renderObject对应一个DOM节点，但若该节点的开启了"),e("code",[t._v("float")]),t._v("、"),e("code",[t._v("absolute")]),t._v("、"),e("code",[t._v("fixed")]),t._v("等时，会被放置在Render Tree的不同位置，不一定是按照DOM Tree文档流排列（这就是所谓的"),e("code",[t._v("脱离文档流")]),t._v("）")]),t._v(" "),e("h2",{attrs:{id:"_8-layout"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-layout"}},[t._v("#")]),t._v(" 8.Layout")]),t._v(" "),e("h3",{attrs:{id:"_8-1-layout概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-layout概述"}},[t._v("#")]),t._v(" 8.1 Layout概述")]),t._v(" "),e("p",[t._v("在"),e("code",[t._v("renderObject")]),t._v("被添加到"),e("code",[t._v("Render Tree")]),t._v("时会计算其位置和大小，这个过程就叫"),e("code",[t._v("布局(Layout)")]),t._v("，在gecko引擎称之为"),e("code",[t._v("回流(reflow)")])]),t._v(" "),e("p",[t._v("HTML使用"),e("code",[t._v("流式布局")]),t._v("，即"),e("code",[t._v("由左到右，由上到下")]),t._v("进行布局，这样的布局有个特点是后进入流中的元素不会影响先进入流中的元素；坐标系基于根元素，零点位于左上角")]),t._v(" "),e("p",[t._v("布局是一个递归过程，从根节点开始逐层递归调用"),e("code",[t._v("renderObject.layout()")]),t._v("计算每个节点的位置和大小信息。layout方法定义在每个"),e("code",[t._v("renderObject")]),t._v("里，webkit代码如下:")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RenderObject")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  virtual "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("layout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 布局")]),t._v("\n  virtual "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("paint")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("PaintInfo"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绘制")]),t._v("\n  virtual "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" rect "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("repaintRect")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 重绘重排组合")]),t._v("\n  Node"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// DOM节点")]),t._v("\n  RenderStyle"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" style"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 计算样式")]),t._v("\n  RenderLayer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" containgLayer"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//the containing z-index layer")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h3",{attrs:{id:"_8-2-dirty-bit系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-dirty-bit系统"}},[t._v("#")]),t._v(" 8.2 Dirty bit系统")]),t._v(" "),e("p",[e("code",[t._v("Dirty bit")]),t._v("即"),e("code",[t._v("脏位系统")]),t._v("。在后期修改了一个节点的位置和大小会重新触发layout，这种过程叫做"),e("code",[t._v("重排")]),t._v("。")]),t._v(" "),e("p",[t._v("为了性能考虑，对于局部改变只需局部重排而非整体重排，故渲染引擎引入了"),e("code",[t._v("Dirty bit system")]),t._v("，在需要重排的"),e("code",[t._v("renderObject")]),t._v("及其子元素上标记"),e("code",[t._v("dirty")]),t._v("字段，随后在重排开始时遍历标记为"),e("code",[t._v("dirty")]),t._v("的"),e("code",[t._v("renderObject")]),t._v("，调用其"),e("code",[t._v("layout")]),t._v("方法触发重排")]),t._v(" "),e("h3",{attrs:{id:"_8-3-layout过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-layout过程"}},[t._v("#")]),t._v(" 8.3 Layout过程")]),t._v(" "),e("ol",[e("li",[t._v("父renderObject计算其宽高、位置")]),t._v(" "),e("li",[t._v("遍历子renderObject，将其在放置于自身容器里，若子renderObject的dirty标志为true，调用其layout方法重新计算其宽高、位置")]),t._v(" "),e("li",[t._v("用子级盒子宽高来填充自身宽高")]),t._v(" "),e("li",[t._v("设置dirty标记为false，表示已经layout好了")])]),t._v(" "),e("h3",{attrs:{id:"_8-4-异步、同步、局部、全局重排"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-异步、同步、局部、全局重排"}},[t._v("#")]),t._v(" 8.4 异步、同步、局部、全局重排")]),t._v(" "),e("p",[e("code",[t._v("异步重排")]),t._v("：为了避免频繁的重排，通常会采用一个异步的方式，即将多个需要重排的工作先放入一个队列中，待队列满了或者最小时间间隔到了，才会统一触发重排")]),t._v(" "),e("p",[e("code",[t._v("同步重排")]),t._v("：同步意味着立刻重排，修改DOM的以下属性会触发")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("offset")]),t._v("：offsetTop、offsetLeft、offsetHeight、offsetWidth")]),t._v(" "),e("li",[e("code",[t._v("scroll")]),t._v("：scrollTop、scrollLeft、scrollHeight、scrollWidth")]),t._v(" "),e("li",[e("code",[t._v("client")]),t._v("：clientTop、clientLeft、clientHeight、clientWidth")]),t._v(" "),e("li",[t._v("... ...")])]),t._v(" "),e("p",[e("code",[t._v("局部重排")]),t._v("：只在局部进行重排，修改DOM的大小和位置或者添加、删除、替换DOM等操作会影响局部的布局，这些会触发局部重排，修改以下属性会触发：")]),t._v(" "),e("ul",[e("li",[t._v("width,height,")]),t._v(" "),e("li",[t._v("margin,padding,")]),t._v(" "),e("li",[t._v("position")]),t._v(" "),e("li",[t._v("display:none")]),t._v(" "),e("li",[t._v("... ...")])]),t._v(" "),e("p",[e("code",[t._v("全局重排")]),t._v("：以下情况会触发")]),t._v(" "),e("ul",[e("li",[t._v("网页初始化时")]),t._v(" "),e("li",[t._v("全局样式更改，例如字体大小")]),t._v(" "),e("li",[t._v("屏幕大小调整")]),t._v(" "),e("li",[t._v("... ...")])]),t._v(" "),e("h3",{attrs:{id:"_8-5-重排优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-重排优化"}},[t._v("#")]),t._v(" 8.5 重排优化")]),t._v(" "),e("p",[t._v("重排是一个非常耗性能的工作，应尽量避免，有很多情况可以优化")]),t._v(" "),e("ul",[e("li",[t._v("修改多个样式时给DOM添加class名，设置class的样式一次性修改")]),t._v(" "),e("li",[t._v("先把DOM的display设置none，修改完后再显示")]),t._v(" "),e("li",[t._v("向一个父节点添加多个子节点时，先创建"),e("code",[t._v("documentFragment")]),t._v("，将子节点添加到其中，最后再把其一次性插入到父节点")]),t._v(" "),e("li",[t._v("使用动画的元素会频繁触发重排，为其开启fixed或absolut使其脱离文档流即可，或者可以的话使用gif图代替")]),t._v(" "),e("li",[t._v("不要使用table布局")]),t._v(" "),e("li",[t._v("... ...")])]),t._v(" "),e("h2",{attrs:{id:"_9-paint"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-paint"}},[t._v("#")]),t._v(" 9.Paint")]),t._v(" "),e("p",[e("code",[t._v("renderObj")]),t._v("经过Layout阶段布局完成后，会调用"),e("code",[t._v("renderObj.paint()")]),t._v("开始绘制节点样式")]),t._v(" "),e("h3",{attrs:{id:"_9-1-局部绘制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-局部绘制"}},[t._v("#")]),t._v(" 9.1 局部绘制")]),t._v(" "),e("p",[t._v("当某个节点发生改变时，其对应的"),e("code",[t._v("renderObj")]),t._v("会使其在屏幕上的矩形框失效，这就会让操作系统判断其为"),e("code",[t._v("“脏区”")]),t._v("并进行"),e("code",[t._v("重绘(repaint)")])]),t._v(" "),e("h3",{attrs:{id:"_9-2-绘制顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-绘制顺序"}},[t._v("#")]),t._v(" 9.2 绘制顺序")]),t._v(" "),e("p",[t._v("绘制是按照元素的样式堆叠顺序进行的，一个块元素的绘制顺序为：")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("background-color")])]),t._v(" "),e("li",[e("p",[t._v("background-image")])]),t._v(" "),e("li",[e("p",[t._v("border")])]),t._v(" "),e("li",[e("p",[t._v("children")])]),t._v(" "),e("li",[e("p",[t._v("outline")])])]),t._v(" "),e("h3",{attrs:{id:"_9-3-重排和重绘的关系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-3-重排和重绘的关系"}},[t._v("#")]),t._v(" 9.3 重排和重绘的关系")]),t._v(" "),e("p",[t._v("一句话："),e("code",[t._v('"重绘不一定重排，重排一定重绘"')])]),t._v(" "),e("p",[t._v("如图中所示，改变一个DOM的大小、位置或者向一个DOM节点进行增删改都会有可能触发layout重排，之后一定会repaint重绘，但是只修改DOM的某些样式，不影响其大小、位置那么就不会触发重排，只用重绘就行。\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f72a515da4d843b49cad231c3efd7260~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("h2",{attrs:{id:"_10-css2视觉模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-css2视觉模型"}},[t._v("#")]),t._v(" 10.CSS2视觉模型")]),t._v(" "),e("h3",{attrs:{id:"_10-1-css盒模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-css盒模型"}},[t._v("#")]),t._v(" 10.1 css盒模型")]),t._v(" "),e("p",[t._v("CSS盒模型将一个元素看作是一个矩形框，框的宽高从外到内由其"),e("code",[t._v("margin")]),t._v("、"),e("code",[t._v("boder")]),t._v("、"),e("code",[t._v("padding")]),t._v("、"),e("code",[t._v("content")]),t._v("构成，如下图:\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f1a87bb6d3f4d4ba013609971561583~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}}),t._v("\n其中，css属性"),e("code",[t._v("box-sizing")]),t._v("决定了"),e("code",[t._v("width")]),t._v("和"),e("code",[t._v("height")]),t._v("要作用于哪个区域,，默认作用于"),e("code",[t._v("content区")]),t._v("即"),e("code",[t._v("box-sizing:content-box")]),t._v("，还有两个可选值"),e("code",[t._v("padding-box")]),t._v("和"),e("code",[t._v("border-box")])]),t._v(" "),e("h3",{attrs:{id:"_10-2-定位方案"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-定位方案"}},[t._v("#")]),t._v(" 10.2 定位方案")]),t._v(" "),e("p",[t._v("1.定位的方案有三种:")]),t._v(" "),e("p",[e("code",[t._v("normal")]),t._v("：这是默认的定位方案，根据元素框"),e("code",[t._v("展示类型")]),t._v("即("),e("code",[t._v("display属性")]),t._v(")和尺寸来布局")]),t._v(" "),e("p",[e("code",[t._v("float")]),t._v("：首先像正常文档流布局，然后脱离文档流，尽可能向左或向右浮动")]),t._v(" "),e("p",[e("code",[t._v("absolute")]),t._v("：脱离文档流，按照其他方式布局")]),t._v(" "),e("p",[t._v("2.盒子的布局方式由这几个因素决定:")]),t._v(" "),e("p",[t._v("展示类型即"),e("code",[t._v("display")])]),t._v(" "),e("p",[e("code",[t._v("盒子尺寸")])]),t._v(" "),e("p",[e("code",[t._v("定位方案")])]),t._v(" "),e("p",[e("code",[t._v("屏幕大小")]),t._v("等外部因素")]),t._v(" "),e("h3",{attrs:{id:"_10-3-盒子展示类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-盒子展示类型"}},[t._v("#")]),t._v(" 10.3 盒子展示类型")]),t._v(" "),e("p",[t._v("通过"),e("code",[t._v("display")]),t._v("设置盒子的展示类型")]),t._v(" "),e("p",[e("code",[t._v("block")]),t._v("：会形成一个块，在浏览器窗口有一个自己的矩形，且块是在垂直方向一个接一个放置的\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4ab7ff9c0d754e2f86e2dc4698cb4dff~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("p",[e("code",[t._v("inline")]),t._v("：没有自己的块，会被包含在块内朝水平方向一个接一个放置\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/083cb4e5fa0f4ebf846d0ee42548c953~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("p",[t._v("当父元素content区域宽度不够时，inline盒子会被挤下去，其以基线对齐\n"),e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cc3f98de0193403fb28e0739672c1093~tplv-k3u1fbpfcp-zoom-1.image",alt:"在这里插入图片描述"}})]),t._v(" "),e("h2",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://web.dev/howbrowserswork/",target:"_blank",rel:"noopener noreferrer"}},[t._v("1.how browsers work"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"https://coolshell.cn/articles/9666.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("2.浏览器的渲染原理简介"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);