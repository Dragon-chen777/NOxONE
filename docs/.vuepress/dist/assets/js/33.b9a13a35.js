;(window.webpackJsonp = window.webpackJsonp || []).push([
	[33],
	{
		465: function (t, a, s) {
			'use strict'
			s.r(a)
			var n = s(1),
				p = Object(n.a)(
					{},
					function () {
						var t = this,
							a = t._self._c
						return a('ContentSlotsDistributor', { attrs: { 'slot-key': t.$parent.slotKey } }, [
							a('h2', { attrs: { id: '_8-1-map' } }, [a('a', { staticClass: 'header-anchor', attrs: { href: '#_8-1-map' } }, [t._v('#')]), t._v(' 8.1 Map')]),
							t._v(' '),
							a('p', [t._v('map是引用类型，由多个键值对构成，声明方式如下')]),
							t._v(' '),
							a('div', { staticClass: 'language-js extra-class' }, [
								a('pre', { pre: !0, attrs: { class: 'language-js' } }, [
									a('code', [
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('var')]),
										t._v(' map1 map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('keyType'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('valType\n'),
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('var')]),
										t._v(' map2 '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('make')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										t._v('map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('keyType'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('valType'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v(' len'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v('\n'),
									]),
								]),
							]),
							a('div', { staticClass: 'language-js extra-class' }, [
								a('pre', { pre: !0, attrs: { class: 'language-js' } }, [
									a('code', [
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('var')]),
										t._v(' map1 '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('string'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('int '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v('\n  '),
										a('span', { pre: !0, attrs: { class: 'token string-property property' } }, [t._v('"a"')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('1')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v('\n  '),
										a('span', { pre: !0, attrs: { class: 'token string-property property' } }, [t._v('"b"')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('2')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v('\n'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										t._v('\nmap1'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v('"a"')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('4')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// 更改key-val')]),
										t._v('\nmap1'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v('"c"')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('3')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// 添加key-val')]),
										t._v('\n\n'),
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('var')]),
										t._v(' map2 '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('int'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('func')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v(' int '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v('\n  '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('1')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('func')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v(' int '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('return')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('1')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v('\n'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										t._v('\n'),
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('var')]),
										t._v(' map3 '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('make')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										t._v('map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('string'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('int'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v('\nmap3'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v('"a"')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('7')]),
										t._v('\nfmt'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('Println')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										t._v('map1'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// map[a:4 b:2 c:3]')]),
										t._v('\nfmt'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('Println')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										t._v('map3'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// map[a:7]')]),
										t._v('\n'),
									]),
								]),
							]),
							a('p', [a('code', [t._v('len')]), t._v('返回其长度')]),
							t._v(' '),
							a('div', { staticClass: 'language-js extra-class' }, [
								a('pre', { pre: !0, attrs: { class: 'language-js' } }, [
									a('code', [
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('len')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										t._v('map1'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// 2')]),
										t._v('\n'),
									]),
								]),
							]),
							a('h2', { attrs: { id: '_8-2-检测键值对是否存在' } }, [
								a('a', { staticClass: 'header-anchor', attrs: { href: '#_8-2-检测键值对是否存在' } }, [t._v('#')]),
								t._v(' 8.2 检测键值对是否存在'),
							]),
							t._v(' '),
							a('p', [t._v('通过'), a('code', [t._v('map1[key]')]), t._v('的方式会返回两个值，分别为'), a('code', [t._v('val')]), t._v('和当前key是否存在的布尔值')]),
							t._v(' '),
							a('div', { staticClass: 'language-js extra-class' }, [
								a('pre', { pre: !0, attrs: { class: 'language-js' } }, [
									a('code', [
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('var')]),
										t._v(' map1 '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('string'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('int '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v('\n  '),
										a('span', { pre: !0, attrs: { class: 'token string-property property' } }, [t._v('"a"')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('1')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v('\n  '),
										a('span', { pre: !0, attrs: { class: 'token string-property property' } }, [t._v('"b"')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('2')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v('\n'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										t._v('\nval'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token literal-property property' } }, [t._v('ok')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' map1'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v('"a"')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// 1 true')]),
										t._v('\nval2'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token literal-property property' } }, [t._v('ok2')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' map1'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v('"c"')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// 0 false')]),
										t._v('\n'),
									]),
								]),
							]),
							a('h2', { attrs: { id: '_8-3-删除键值对' } }, [a('a', { staticClass: 'header-anchor', attrs: { href: '#_8-3-删除键值对' } }, [t._v('#')]), t._v(' 8.3 删除键值对')]),
							t._v(' '),
							a('p', [t._v('通过'), a('code', [t._v('delete(map1, key)')]), t._v('的方式可以删除')]),
							t._v(' '),
							a('div', { staticClass: 'language-js extra-class' }, [
								a('pre', { pre: !0, attrs: { class: 'language-js' } }, [
									a('code', [
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('delete')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										t._v('map1'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token string' } }, [t._v('"a"')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v('\n'),
									]),
								]),
							]),
							a('h2', { attrs: { id: '_8-4-for-range迭代map' } }, [a('a', { staticClass: 'header-anchor', attrs: { href: '#_8-4-for-range迭代map' } }, [t._v('#')]), t._v(' 8.4 for-range迭代map')]),
							t._v(' '),
							a('div', { staticClass: 'language-js extra-class' }, [
								a('pre', { pre: !0, attrs: { class: 'language-js' } }, [
									a('code', [
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('for')]),
										t._v(' key'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token literal-property property' } }, [t._v('value')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' range map1 '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v('\n  '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// ...')]),
										t._v('\n'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										t._v('\n'),
									]),
								]),
							]),
							a('h2', { attrs: { id: '_8-5-map类型切片' } }, [a('a', { staticClass: 'header-anchor', attrs: { href: '#_8-5-map类型切片' } }, [t._v('#')]), t._v(' 8.5 map类型切片')]),
							t._v(' '),
							a('div', { staticClass: 'language-js extra-class' }, [
								a('pre', { pre: !0, attrs: { class: 'language-js' } }, [
									a('code', [
										a('span', { pre: !0, attrs: { class: 'token literal-property property' } }, [t._v('s')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('make')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('string'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('int'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('5')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v('\ns2 '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('string'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('int '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v('\n  map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('string'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('int '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token string-property property' } }, [t._v('"a"')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('1')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v('\n  map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('string'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('int '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token string-property property' } }, [t._v('"b"')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('2')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v('\n  map'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('[')]),
										t._v('string'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(']')]),
										t._v('int '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token string-property property' } }, [t._v('"c"')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token number' } }, [t._v('3')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v('\n'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										t._v('\n\n'),
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('for')]),
										t._v(' _'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token literal-property property' } }, [t._v('val')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' range s '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v('\n  fmt'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('Println')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										t._v('val'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// map[] ...')]),
										t._v('\n'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										t._v('\n'),
										a('span', { pre: !0, attrs: { class: 'token keyword' } }, [t._v('for')]),
										t._v(' _'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(',')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token literal-property property' } }, [t._v('val')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v(':')]),
										a('span', { pre: !0, attrs: { class: 'token operator' } }, [t._v('=')]),
										t._v(' range s2 '),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('{')]),
										t._v('\n  fmt'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('.')]),
										a('span', { pre: !0, attrs: { class: 'token function' } }, [t._v('Print')]),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('(')]),
										t._v('val'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v(')')]),
										t._v(' '),
										a('span', { pre: !0, attrs: { class: 'token comment' } }, [t._v('// map[a:1] map[b:2] map[c:3]')]),
										t._v('\n'),
										a('span', { pre: !0, attrs: { class: 'token punctuation' } }, [t._v('}')]),
										t._v('\n'),
									]),
								]),
							]),
						])
					},
					[],
					!1,
					null,
					null,
					null,
				)
			a.default = p.exports
		},
	},
])
