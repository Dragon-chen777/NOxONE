;(window.webpackJsonp = window.webpackJsonp || []).push([
	[32],
	{
		464: function (s, t, a) {
			'use strict'
			a.r(t)
			var e = a(1),
				n = Object(e.a)(
					{},
					function () {
						var s = this,
							t = s._self._c
						return t('ContentSlotsDistributor', { attrs: { 'slot-key': s.$parent.slotKey } }, [
							t('h3', { attrs: { id: '_1-select' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_1-select' } }, [s._v('#')]), s._v(' 1. SELECT')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' col2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('table')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(';')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DISTINCT')]),
										s._v(' col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' col2 '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('table')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 唯一列值')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name LIMITE n '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 返回前n行')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_2-where' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_2-where' } }, [s._v('#')]), s._v(' 2. WHERE')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' condition '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('--条件语句')]),
										s._v('\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' id '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('1')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' age '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('>=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('18')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' age '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('BETWEEN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('12')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('AND')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('17')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' city '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('IN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'chengdu'")]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'guiyang'")]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' name '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('LIKE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'韦%'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('OR')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'_兴%'")]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_3-and、or、not' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_3-and、or、not' } }, [s._v('#')]), s._v(' 3. AND、OR、NOT')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' condition1 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('AND')]),
										s._v(' condition2 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('AND')]),
										s._v(' condition3\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' condition1 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('OR')]),
										s._v(' condition2 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('OR')]),
										s._v(' condition3\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' condition1 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('AND')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' condition2 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('OR')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' condition3 '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- !condition1 && !condition2 || !condition3')]),
										s._v('\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' age '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('>')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('18')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('AND')]),
										s._v(' city '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'guiyang'")]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' city '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'beijing'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('AND')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' age '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('<')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('18')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' city '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'guiyang'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('OR')]),
										s._v(' city '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'chengdu'")]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_4-null' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_4-null' } }, [s._v('#')]), s._v(' 4. NULL')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' col1 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('IS')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' col1 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('IS')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_5-order-by' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_5-order-by' } }, [s._v('#')]), s._v(' 5. ORDER BY')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ORDER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' col2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ASC')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('|')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DESC')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 升序|降序')]),
										s._v('\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ORDER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' age '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ASC')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 年龄从小到大排序')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' sex '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'man'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ORDER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' salary '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DESC')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 男人薪资从大到小排序')]),
										s._v('\n\n'),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 先按薪资降序，同等薪资的再按年龄升序（挑选年少多金的男人）')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' sex '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'man'")]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ORDER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' salary '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DESC')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' age '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ASC')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_6-insert-into' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_6-insert-into' } }, [s._v('#')]), s._v(' 6. INSERT INTO')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INSERT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INTO')]),
										s._v(' table_name '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' col2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('VALUES')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('val1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' val2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INSERT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INTO')]),
										s._v(' table_name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('VALUES')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('val1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' val2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 确保所有值顺序与所有列顺序一致')]),
										s._v('\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INSERT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INTO')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('name'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' age'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' salary'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('VALUES')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'jack'")]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('17')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('280000')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_7-update' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_7-update' } }, [s._v('#')]), s._v(' 7. UPDATE')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('UPDATE')]),
										s._v(' table_name\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SET')]),
										s._v(' col1 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' val1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' col2 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' val2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' condition\n'),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 我有个小疑问：同样都是对列进行操作，为什么插入和更改的语法结构不能保持一致呢？')]),
										s._v('\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('UPDATE')]),
										s._v(' users\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SET')]),
										s._v(' age '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('18')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' city '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'guiyang'")]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' id '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('107')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_8-delete' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_8-delete' } }, [s._v('#')]), s._v(' 8. DELETE')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DELETE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' condition\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_9-min-、max-、avg-、sum-、count' } }, [
								t('a', { staticClass: 'header-anchor', attrs: { href: '#_9-min-、max-、avg-、sum-、count' } }, [s._v('#')]),
								s._v(' 9. MIN()、MAX()、AVG()、SUM()、COUNT()'),
							]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('MAX')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('SUM')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('AVG')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('COUNT')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('MIN')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('as')]),
										s._v(' newCol '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' condition\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_10-like' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_10-like' } }, [s._v('#')]), s._v(' 10. LIKE')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' name '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('LIKE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'str%'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 以str开头')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' name '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('LIKE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'%str'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 以str结尾')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' name '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('LIKE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'%str%'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 包含str')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' name '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('LIKE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'_str%'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 第二位以str开始')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' name '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('LIKE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'str_%'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 倒数第二位为str')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' name '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('LIKE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'str__%'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 倒数第三为str')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' name '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('LIKE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'a%o'")]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 以a开头，o结尾')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_11-in' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_11-in' } }, [s._v('#')]), s._v(' 11. IN')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name \n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' col '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('IN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('val1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' val2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name1\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' col '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('IN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_12-between-and' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_12-between-and' } }, [s._v('#')]), s._v(' 12. BETWEEN AND')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' col '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('BETWEEN')]),
										s._v(' val1 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('AND')]),
										s._v(' val2\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_13-as' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_13-as' } }, [s._v('#')]), s._v(' 13. AS')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' newCol '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 列别名')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('col2 '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' o '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 表别名')]),
										s._v('\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' u'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' userName'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' u'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('age'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' c'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' companyName \n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' u'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' companys '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' c\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' u'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('id '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('107')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('AND')]),
										s._v(' u'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('companyId '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' c'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('id\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_14-join-on' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_14-join-on' } }, [s._v('#')]), s._v(' 14. JOIN ON')]),
							s._v(' '),
							t('p', [s._v('JOIN用于联接合并多个表，合并类型分为以下四种：')]),
							s._v(' '),
							t('ul', [
								t('li', [t('p', [t('code', [s._v('(INNER) JOIN')]), s._v('：完全匹配，返回的是两个表的交集（常用）')])]),
								s._v(' '),
								t('li', [t('p', [t('code', [s._v('LEFT JOIN')]), s._v('：返回的是左表所有记录以及两个表的交集，即通过左表的外键联接右表时，若查询不到右表对应的内键，也返回该记录')])]),
								s._v(' '),
								t('li', [t('p', [t('code', [s._v('RIGHT JOIN')]), s._v('：返回的是左表所有记录以及两个表的交集')])]),
								s._v(' '),
								t('li', [t('p', [t('code', [s._v('FULL JOIN')]), s._v('：返回左表和右表的并集')])]),
							]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' table_name1\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('JOIN')]),
										s._v(' table_name2 '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ON')]),
										s._v(' table_name1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('col1 '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' table_name2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('col1\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 返回完全匹配的orderId、orderDate、customerName、customerId')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('orderId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('orderDate'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' c'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('customerName'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' c'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('customerId\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' orders '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' o\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('JOIN')]),
										s._v(' customers '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' c '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ON')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('customerId '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' c'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('customerId\n\n\n'),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 返回左表orders的所有列以及对应的右表customers的所有列(找不到匹配时右表字段值全为null)')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' orders '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' o\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('LEFT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('JOIN')]),
										s._v(' customers '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' c '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ON')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('customerId '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' c'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('customerId\n\n'),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 三表联查：根据订单id查询订单时间，供应商名称，消费者名称字段')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('orderId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('orderDate'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('supplierName'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' c'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('customerName\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' orders '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' o\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('JOIN')]),
										s._v(' suppliers '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' s '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ON')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('supplierId '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('supplierId\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('JOIN')]),
										s._v(' customers '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' c '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ON')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('customerId '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' c'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('customerId\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' o'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('orderId '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('1000007')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_15-union' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_15-union' } }, [s._v('#')]), s._v(' 15. UNION')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table1\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('UNION')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table2\n\n'),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 允许重复')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table1\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('UNION')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ALL')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table2\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 返回中国的消费者和供应商所在城市')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' city'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' country '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' customers\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' country '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'china'")]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('UNION')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' city'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' country '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' suppliers\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' country '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'china'")]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_16-group-by' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_16-group-by' } }, [s._v('#')]), s._v(' 16. GROUP BY')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('GROUP')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' col '),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 以col字段作为分组依据输出')]),
										s._v('\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 返回每个城市的订单量，按订单量降序')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('COUNT')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('orderId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' orderCounts'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' city\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' orders\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('GROUP')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' city\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ORDER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' orderCounts '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DESC')]),
										s._v('\n\n'),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 返回每个城市的订单量，总销售额，最大销售额、平均销售额，按总销售额降序、然后按订单量升序')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' \n'),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('COUNT')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('orderId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' orderCounts'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' \n'),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('SUM')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('orderPrice'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' orderPriceSum'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('MAX')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('orderPrice'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' orderPriceMax'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token function' } }, [s._v('AVG')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('orderPrice'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' orderPriceAvg'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\ncity\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' orders\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('GROUP')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' city\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ORDER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' orderPriceSum '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DESC')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' orderCounts '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ASC')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_17-having' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_17-having' } }, [s._v('#')]), s._v(' 17. HAVING')]),
							s._v(' '),
							t('p', [s._v('用于在'), t('code', [s._v('GROUP BY')]), s._v('聚合之后进行最后筛选')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table_name\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('GROUP')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v(' col1\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('HAVING')]),
										s._v(' condition\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_18-exists' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_18-exists' } }, [s._v('#')]), s._v(' 18. EXISTS')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('  \n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table1\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('EXISTS')]),
										s._v('  \n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col1 '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table2 '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' condition'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_19-any、all' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_19-any、all' } }, [s._v('#')]), s._v(' 19. ANY、ALL')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table1\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' col1 operator '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ANY')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col1 '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' table2\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 返回有订单记录的用户')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' userId '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ANY')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' customerId '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' orders \n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n\n'),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 返回无订单记录的用户')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' userId '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('!=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ALL')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' customerId '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' orders \n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_20-select-into' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_20-select-into' } }, [s._v('#')]), s._v(' 20. SELECT INTO')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INTO')]),
										s._v(' newTable\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' oldTable\n\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('s'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INTO')]),
										s._v(' newTable '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('IN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'otherDB.mdb'")]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' oldTable\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INTO')]),
										s._v(' newUsers\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHERE')]),
										s._v(' age '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('>')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('18')]),
										s._v('\n\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' username'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' age \n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INTO')]),
										s._v(' newUsers '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('IN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'testDB.mdb'")]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_21-insert-into' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_21-insert-into' } }, [s._v('#')]), s._v(' 21. INSERT INTO')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INSERT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INTO')]),
										s._v(' newTable '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' col2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' col2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' oldTable\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INSERT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INTO')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('userId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' userName'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' age'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' studentId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' studentName'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' age \n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' students\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_22-case-when-then-else-end-as' } }, [
								t('a', { staticClass: 'header-anchor', attrs: { href: '#_22-case-when-then-else-end-as' } }, [s._v('#')]),
								s._v(' 22. CASE (WHEN-THEN-ELSE) END AS'),
							]),
							s._v(' '),
							t('p', [s._v('类似'), t('code', [s._v('switch-return')])]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CASE')]),
										s._v('\n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHEN')]),
										s._v(' condition1 '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('THEN')]),
										s._v(' res1\n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHEN')]),
										s._v(' condition2 '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('THEN')]),
										s._v(' res2\n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ELSE')]),
										s._v(' res\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('END')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' col\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 收入2w以上为帅，1w以上为小康，1w以下为普通')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CASE')]),
										s._v(' \n   '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHEN')]),
										s._v(' salary '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('>')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('20000')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('THEN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'帅'")]),
										s._v('\n   '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHEN')]),
										s._v(' salary '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('>')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('10000')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('THEN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'小康'")]),
										s._v('\n   '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ELSE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'普通'")]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('END')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v(' tag'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n\n'),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 若工资字段为null以age字段排序')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('*')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' users\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ORDER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('BY')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CASE')]),
										s._v('\n   '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('WHEN')]),
										s._v(' salary '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('IS')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('THEN')]),
										s._v(' age\n   '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ELSE')]),
										s._v(' salary\n '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('END')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_23-create-drop-database' } }, [
								t('a', { staticClass: 'header-anchor', attrs: { href: '#_23-create-drop-database' } }, [s._v('#')]),
								s._v(' 23. CREATE | DROP DATABASE'),
							]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DATABASE')]),
										s._v(' dbName\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DROP')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DATABASE')]),
										s._v(' dbName\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_24-create-drop-table' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_24-create-drop-table' } }, [s._v('#')]), s._v(' 24. CREATE | DROP TABLE')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' tableName '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  col1  datatype'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  col2  datatype'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token comment' } }, [s._v('-- 从另一个表中创建新表')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' newTable '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('AS')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('SELECT')]),
										s._v(' col1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' col2\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FROM')]),
										s._v(' oldTable\n\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DROP')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' tableName\n'),
									]),
								]),
							]),
							t('p', [s._v('Example')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  userId '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  count  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('varchar')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('255')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n  psw '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('varchar')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('255')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n  birthDay '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('date')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_25-alter-table' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_25-alter-table' } }, [s._v('#')]), s._v(' 25. ALTER TABLE')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ALTER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' tableName\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ADD')]),
										s._v(' col1 datatype '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('constraint')]),
										s._v('\n\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ALTER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' tableName\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('RENAME')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('COLUMN')]),
										s._v(' oldCol '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('to')]),
										s._v(' newCol\n\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ALTER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' tableName\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('MODIFY')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('COLUMN')]),
										s._v(' col1 datatype '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('constraint')]),
										s._v('\n\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ALTER')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' tableName\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DROP')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('COLUMN')]),
										s._v(' col1\n'),
									]),
								]),
							]),
							t('h3', { attrs: { id: '_26-sql-constraints' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_26-sql-constraints' } }, [s._v('#')]), s._v(' 26. SQL Constraints')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' tableName '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  col1 datatype constraint1'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  col2 datatype constraint2'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('.')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('p', [t('code', [s._v('constraints')]), s._v('用于指定列的约束规则，常用字段如下:')]),
							s._v(' '),
							t('ul', [
								t('li', [t('code', [s._v('NOT NULL')])]),
								s._v(' '),
								t('li', [t('code', [s._v('UNIQUE')])]),
								s._v(' '),
								t('li', [t('code', [s._v('PRIMARY KEY')])]),
								s._v(' '),
								t('li', [t('code', [s._v('FOREIG KEY')])]),
								s._v(' '),
								t('li', [t('code', [s._v('CHECK')])]),
								s._v(' '),
								t('li', [t('code', [s._v('DEFAULT')])]),
								s._v(' '),
								t('li', [t('code', [s._v('CREATE INDEX')])]),
							]),
							s._v(' '),
							t('p', [s._v('不多BB，让我们来逐一使用这些字段')]),
							s._v(' '),
							t('h4', { attrs: { id: '_26-1-not-null' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_26-1-not-null' } }, [s._v('#')]), s._v(' 26.1 NOT NULL')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  id '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										s._v('\n  name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('varchar')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('255')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h4', { attrs: { id: '_26-2-unique' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_26-2-unique' } }, [s._v('#')]), s._v(' 26.2 UNIQUE')]),
							s._v(' '),
							t('p', [
								s._v('每个表仅有一个'),
								t('code', [s._v('PRIMARY KEY')]),
								s._v('约束，但可以有很多个'),
								t('code', [s._v('UNIQUE')]),
								s._v('约束，'),
								t('code', [s._v('PRIMARY KEY')]),
								s._v('一定是'),
								t('code', [s._v('UNIQUE')]),
								s._v('，但'),
								t('code', [s._v('UNIQUE')]),
								s._v('不一定是'),
								t('code', [s._v('PRIMARY KEY')]),
							]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  id '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('UNIQUE')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h4', { attrs: { id: '_26-3-primary-key' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_26-3-primary-key' } }, [s._v('#')]), s._v(' 26.3 PRIMARY KEY')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  id '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('UNIQUE')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('PRIMARY')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('KEY')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('id'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h4', { attrs: { id: '_26-4-foreign-key' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_26-4-foreign-key' } }, [s._v('#')]), s._v(' 26.4 FOREIGN KEY')]),
							s._v(' '),
							t('p', [s._v('外键对应关系表的主键')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' orders '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  orderId '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  goodsId '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  customerId '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  \n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('PRIMARY')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('KEY')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('orderId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FOREIGN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('KEY')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('goodsId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('REFERENCES')]),
										s._v(' goods'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('goodsId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('FOREIGN')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('KEY')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('customerId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('REFERENCES')]),
										s._v(' customers'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('customerId'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h4', { attrs: { id: '_26-5-check' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_26-5-check' } }, [s._v('#')]), s._v(' 26.5 CHECK')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  id '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  age '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CHECK')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('age '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('>=')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('18')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h4', { attrs: { id: '_26-6-default' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_26-6-default' } }, [s._v('#')]), s._v(' 26.6 DEFAULT')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('TABLE')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('\n  id '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('int')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token operator' } }, [s._v('NOT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token boolean' } }, [s._v('NULL')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v('\n  name '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('varchar')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										t('span', { pre: !0, attrs: { class: 'token number' } }, [s._v('255')]),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('DEFAULT')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token string' } }, [s._v("'user'")]),
										s._v('\n'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
							t('h4', { attrs: { id: '_26-7-create-index' } }, [t('a', { staticClass: 'header-anchor', attrs: { href: '#_26-7-create-index' } }, [s._v('#')]), s._v(' 26.7 CREATE INDEX')]),
							s._v(' '),
							t('p', [s._v('功能类型diff key，索引用于加快搜索/查询的速度')]),
							s._v(' '),
							t('div', { staticClass: 'language-sql extra-class' }, [
								t('pre', { pre: !0, attrs: { class: 'language-sql' } }, [
									t('code', [
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('CREATE')]),
										s._v(' '),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('INDEX')]),
										s._v(' idx\n'),
										t('span', { pre: !0, attrs: { class: 'token keyword' } }, [s._v('ON')]),
										s._v(' users '),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v('(')]),
										s._v('name'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(',')]),
										s._v(' home'),
										t('span', { pre: !0, attrs: { class: 'token punctuation' } }, [s._v(')')]),
										s._v('\n'),
									]),
								]),
							]),
						])
					},
					[],
					!1,
					null,
					null,
					null,
				)
			t.default = n.exports
		},
	},
])
